2root2
Caleb Smith-Salzberg and Clive Johnston
pd5
Smart Elevator

/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
wow we so BOSS bc...
- The elevator we created has many moving parts and was super hard to visualize. Although we did not expect this, we accepted the challenge. Our utilization of KtS was exemplary, and we were able to solve most of our issues.
- Specifically we were having issues bringing together all the different parts, and to have them interact with each other at the right time. We fixed this by creating a timer in ControlTower, and every Elevator and Passenger is aware of when they were created, how long they have until they reach the end. This allows them to interact with each other properly. 


UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
blah blah pesky bug...
- We have not figured out when it is optimal to reassign ranges. In our elevator, when a new wave of people come, the passengers are only accepted when a variable number of elevators are available. We believe that when waves are coming very frequently, elevators should wait until there are more available elevators available until they reassign ranges. This way, each elevator would have a smaller range of floors to visit. For example, if 50 floors must be visited, and ranges are reassigned when only one elvator is available, that elevator would have a range of 2-50. If it were to wait until 10 elevators are available, each elevator would only have five floors in its range.
We were not able to reach a definitive answer to this. The problem truly is an optimization one in that if more elvators are waited for, wait times increase, but travel times decrease.
- Also, the Smart Elevator system we designed is only actually smart when there is a large (number of floors) : (number of Elevators) ratio (as close to 1 as possible), and when each wave sends about 5 people for every Elevator there is. If there are not enough Elevators, or if there are too many people, the "dummy" Elevator will often actually be faster. This is also because the "dummy" Elevator actually isn't totally dumb - it's actually pretty smart. In creating the dummy Elevator we used the same template as we had for the Smart Elevator, because creating a truly "dummy" Elevator would have taken a lot of extra work. 
- Also, because of the randomness of the destinations, there is a lot of variation. So if you run a simulation and get 10% improvement, you could run it again, and get -30% improvement. This isn't really a bug, more just due to the random nature of destinations. 
- Also, the frequency of people going to higher floors is generally smaller than that of those going to lower floors. This is because the simulation cuts off after a set time, so many of the people going to higher floors get esentially stuck. If we allowed them to come back down, then the frequencys should be more evenly distributed across floors. 
- One more thing is that Elevators are only sent up when a new wave is being sent, even if they were ready to be sent up before the wave because of leftover people from previous waves. If this was modified, then the smart Elevator would be a lot smarter

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- Elevators are quite complicated! Smart elevators are rare, but we believe they are necessary, especially in larger buildings.
- Writing to files in Java is very easy
- Being able to look at a huge spreadsheet of data you generated is very very satisfying

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
we changed ___ to ___ bc...
- We didn't have any major design changes. The biggest thing we did was implement the timing mechanism. We hadn't really planned to do this, but we realized it was going to need to be done. It was something we def should have seen coming, and we should have originally planned for it. 

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
tales of wisdom gained...
- It is of the utmost importance to organize before beginning to code. We felt that this semester we planned more than any other semester's final project. Still, more preperation before putting fingers to keys would have proved extremely valuable.
- Don't slack on making accessors and mutators, even if you don't think you need them. You probably will need them at some point (like us).
- Also, make sure you have actually done a task correctly before moving on to something else. We had this problem with data generating in the csv. We just saw code that wasn't giving any errors, and a bunch of data being produced, so we thought everything was alright, and we moved on. Later, upon inspecting the data, we leanred we were totally wrong, and we had to backtrack a considerable amount. Lesson: Just because you really want something to be working properly, that doesn't mean it will actually will be. 

||||||||||||||||||||||||||||||||||||||||||



 ______   ______   __   __   __       ______   _______
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/
==============================================================


yyyy-mm-dd
--------------------------------------------------------------
<Member> :: <Thing member did.>
<Member> :: <Thing member did.>
<Member> :: <Thing member did.>
==============================================================
2016-05-17
--------------------------------------------------------------
All   :: Continued brainstorming
Caleb :: Made edits to proposal.
Clive :: Work on proposal.
==============================================================
2016-05-18
--------------------------------------------------------------
Caleb :: Added first plan. Made devlog.
Clive :: Continued brainstorming
==============================================================
2016-05-21
--------------------------------------------------------------
Clive :: Added algorithm to proposal for assigning Passengers to an Elevator
==============================================================
2016-05-22
--------------------------------------------------------------
Both :: Massive planning in class. Many Keys were used.
Caleb :: Wrote Elevator.java class. Subject to change, but basic idea in place
Clive :: Added updated plan, edited Elevator class
==============================================================
2016-05-23
--------------------------------------------------------------
Both :: Massive planning in class. Many Keys were used.
Caleb :: Added an assignRange method for when all elevators are free (math gets weird). Put together a nice flow chart
Clive :: Bashed out a wonderful UML diagram
==============================================================
2016-05-24
--------------------------------------------------------------
Both :: Debugging at school and home.
Caleb :: Fixed assigningFloors method in ControlTower. Worked on the driver/data collector (ControlPanel)
Clive :: Worked on debugging. Added to the driver/data collector.
==============================================================
2016-05-25
--------------------------------------------------------------
Both :: Debugging at school
Caleb :: Worked on updating flowchart
Clive :: Worked on updating UML, flowchart
==============================================================
2016-05-26
--------------------------------------------------------------
Both :: Debugging at school and home, planning session in class
Caleb :: Contemplated a potential user interaction and a loop to send more passengers
Clive :: Worked on primitive Passenger class
==============================================================
2016-05-28
--------------------------------------------------------------
Caleb :: Added a timeForEachPassenger method to calculate the time for each passenger in every elevator. This will be a factor in the csv file we plan on producing under simulations.
Clive :: Brought Passenger class into conformity with everything else
==============================================================
2016-05-29
--------------------------------------------------------------
Caleb :: Made README.md
Clive :: Edited README.md, fixed issue of dealing with leftover Passengers by adding them back to ArrayList people
==============================================================
2016-05-30
--------------------------------------------------------------
Caleb :: Made new plan.	Passenger now has a complete time including wait time and travel time.
Clive :: Helped implement loopy() method in ControlTower
==============================================================
2016-05-31
--------------------------------------------------------------
Caleb :: Updated code so passengers are emptied. General debuggin.
Clive :: Updated code so elevators only move when they are available. General debugging.
==============================================================
2016-06-01
--------------------------------------------------------------
Caleb :: Started work on creating csv. Updated flow.
Clive :: Created new plan, created new uml.
==============================================================
2016-06-03
--------------------------------------------------------------
Clive :: Completed update code to output csv of raw and processed data. 
==============================================================
2016-06-04
--------------------------------------------------------------
Caleb :: Attempt work at processing. Debug. Made parameters variable and updated csv output types. General cleaning.
Clive :: Debug. General cleaning and addition of accessors and mutators.
==============================================================
2016-06-05
--------------------------------------------------------------
Caleb :: Partially fixed bug where the csv would not be generated due to what we believe is a divide by zero error.
Clive :: Lots of debugging. Fixed error due to Elevator's data not being reset properly after each wave. Started Driver file
==============================================================
2016-06-06
--------------------------------------------------------------
Caleb :: 
Clive :: Debugging in class. Finished Driver file. Updated ReadMe
==============================================================











